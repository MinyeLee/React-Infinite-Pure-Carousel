{"ast":null,"code":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(['exports', 'react', 'prop-types'], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports, require('react'), require('prop-types'));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports, global.react, global.propTypes);\n    global.index = mod.exports;\n  }\n})(this, function (exports, _react, _propTypes) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _react2 = _interopRequireDefault(_react);\n\n  var _propTypes2 = _interopRequireDefault(_propTypes);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  var _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  var _createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n\n  function _possibleConstructorReturn(self, call) {\n    if (!self) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n  }\n\n  function _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n  }\n\n  var reactSwipeEvents = function (_React$Component) {\n    _inherits(reactSwipeEvents, _React$Component);\n\n    function reactSwipeEvents(props, context) {\n      _classCallCheck(this, reactSwipeEvents);\n\n      var _this = _possibleConstructorReturn(this, (reactSwipeEvents.__proto__ || Object.getPrototypeOf(reactSwipeEvents)).call(this, props));\n\n      _this.state = {\n        originalX: 0,\n        originalY: 0\n      };\n      _this.onTouchStart = _this.onTouchStart.bind(_this);\n      _this.onTouchMove = _this.onTouchMove.bind(_this);\n      _this.onTouchEnd = _this.onTouchEnd.bind(_this);\n      _this.getModifiedProps = _this.getModifiedProps.bind(_this);\n      _this.getDelta = _this.getDelta.bind(_this);\n      return _this;\n    }\n\n    _createClass(reactSwipeEvents, [{\n      key: 'onTouchStart',\n      value: function onTouchStart(e) {\n        var touch = e.changedTouches[0];\n        var current = this.getCurrentPosition(touch);\n        this.setState({\n          originalX: current.x,\n          originalY: current.y\n        });\n      }\n    }, {\n      key: 'onTouchMove',\n      value: function onTouchMove(e) {\n        var touch = e.changedTouches[0];\n        var delta = this.getDelta(touch);\n        var current = this.getCurrentPosition(touch);\n        this.props.onSwiping && this.props.onSwiping(e, this.state.originalX, this.state.originalY, current.x, current.y, delta.x, delta.y);\n      }\n    }, {\n      key: 'onTouchEnd',\n      value: function onTouchEnd(e) {\n        var touch = e.changedTouches[0];\n        var delta = this.getDelta(touch);\n        var current = this.getCurrentPosition(touch);\n\n        if (Math.abs(delta.x) > this.props.threshold) {\n          if (delta.x > 0) this.props.onSwipedRight && this.props.onSwipedRight(e, this.state.originalX, current.x);\n          if (delta.x < 0) this.props.onSwipedLeft && this.props.onSwipedLeft(e, this.state.originalX, current.x);\n        }\n\n        if (Math.abs(delta.y) > this.props.threshold) {\n          if (delta.y > 0) this.props.onSwipedDown && this.props.onSwipedDown(e, this.state.originalY, current.y);\n          if (delta.y < 0) this.props.onSwipedUp && this.props.onSwipedUp(e, this.state.originalY, current.y);\n        }\n\n        this.props.onSwiped && this.props.onSwiped(e, this.state.originalX, this.state.originalY, current.x, current.y, delta.x, delta.y);\n        this.setState({\n          originalX: 0,\n          originalY: 0\n        });\n      }\n    }, {\n      key: 'getCurrentPosition',\n      value: function getCurrentPosition(touch) {\n        return {\n          x: parseInt(touch.screenX),\n          y: parseInt(touch.screenY)\n        };\n      }\n    }, {\n      key: 'getDelta',\n      value: function getDelta(touch) {\n        return {\n          x: parseInt(touch.screenX) - this.state.originalX,\n          y: parseInt(touch.screenY) - this.state.originalY\n        };\n      }\n    }, {\n      key: 'getModifiedProps',\n      value: function getModifiedProps() {\n        var props = _extends({}, this.props, {\n          onTouchStart: this.onTouchStart,\n          onTouchEnd: this.onTouchEnd,\n          onTouchMove: this.onTouchMove\n        });\n\n        delete props.children;\n        delete props.onSwiping;\n        delete props.onSwiped;\n        delete props.onSwipedUp;\n        delete props.onSwipedDown;\n        delete props.onSwipedLeft;\n        delete props.onSwipedRight;\n        delete props.nodeName;\n        delete props.threshold;\n        return props;\n      }\n    }, {\n      key: 'render',\n      value: function render() {\n        var props = this.getModifiedProps();\n        return _react2.default.createElement(this.props.nodeName, props, this.props.children);\n      }\n    }]);\n\n    return reactSwipeEvents;\n  }(_react2.default.Component);\n\n  reactSwipeEvents.defaultProps = {\n    threshold: 10,\n    nodeName: 'div'\n  };\n  reactSwipeEvents.propTypes = {\n    children: _propTypes2.default.element.isRequired,\n    onSwiping: _propTypes2.default.func,\n    onSwiped: _propTypes2.default.func,\n    onSwipedUp: _propTypes2.default.func,\n    onSwipedDown: _propTypes2.default.func,\n    onSwipedLeft: _propTypes2.default.func,\n    onSwipedRight: _propTypes2.default.func,\n    nodeName: _propTypes2.default.string,\n    threshold: _propTypes2.default.number\n  };\n  exports.default = reactSwipeEvents;\n});","map":null,"metadata":{},"sourceType":"script"}